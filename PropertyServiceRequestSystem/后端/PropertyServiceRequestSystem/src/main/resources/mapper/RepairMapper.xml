<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdpu.mapper.RepairMapper">

    <resultMap id="BaseResultMap" type="com.gdpu.pojo.Repair">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="workerId" column="worker_id" jdbcType="VARCHAR"/>
            <result property="studentId" column="student_id" jdbcType="VARCHAR"/>
            <result property="type" column="type" jdbcType="VARCHAR"/>
            <result property="repairDate" column="repair_Date" jdbcType="TIMESTAMP"/>
            <result property="address" column="address" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="applicantName" column="applicant_name" jdbcType="VARCHAR"/>
            <result property="mobile" column="mobile" jdbcType="VARCHAR"/>
            <result property="finishTime" column="finish_Time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,worker_id,student_id,
        type,repair_Date,address,
        description,applicant_name,mobile,
        finish_Time
    </sql>

    <insert id="addNormalRepairByOpenid">
        INSERT INTO repair (type, address, description, applicant_name, mobile, student_id, worker_id)
        VALUES (
                   "normal",
                   #{addRepairInfo.repairLocation},
                   #{addRepairInfo.description},
                   #{addRepairInfo.studentName},
                   #{addRepairInfo.studentPhone},
                   #{openid},
                   #{workerOpenId}
               )
    </insert>

    <insert id="addEmergencyRepairByOpenid">
        INSERT INTO repair (type, address, description, applicant_name, mobile, student_id, worker_id)
        VALUES (
                   "emergency",
                   #{addRepairInfo.repairLocation},
                   #{addRepairInfo.description},
                   #{addRepairInfo.studentName},
                   #{addRepairInfo.studentPhone},
                   #{openid},
                   #{workerOpenId}
               )
    </insert>

    <update id="finishRepairById">
        update repair
        set
            finish_Time = CURRENT_TIMESTAMP
        where id = #{id}
    </update>

    <update id="updateRepair">
        UPDATE repair SET worker_id = #{workerId} WHERE id = #{id}
    </update>

    <delete id="deleteRepairById">
        delete from `repair` where id = #{id}
    </delete>

    <select id="studentShowNoFinishRepairListByOpenid" resultType="com.gdpu.VO.ShowRepairListVo">
        select
            id,type,applicant_name,mobile,address,description,
            repair_Date,wxuser.`name` as workerName,finish_Time
        from `repair`,`wxuser`
        where `repair`.worker_id=wxuser.wxUser_openid and role='worker' and student_id = #{openid} and finish_Time is null
    </select>

    <select id="studentShowFinishRepairListByOpenid" resultType="com.gdpu.VO.ShowRepairListVo">
        select
            id,type,applicant_name,mobile,address,description,
            repair_Date,wxuser.`name` as workerName,finish_Time
        from `finished_repair`,`wxuser`
        where `finished_repair`.worker_id=wxuser.wxUser_openid and role='worker' and student_id = #{openid} and finish_Time is not null
    </select>

    <select id="workerShowNormalRepairListByOpenid" resultType="com.gdpu.VO.WorkerShowRepairListVo">
        select
            id,type,applicant_name,mobile,address,description,
            repair_Date,finish_Time
        from `repair`
        where worker_id=#{openid} and type='normal' and finish_Time is NULL
    </select>

    <select id="workerShowEmergencyRepairListByOpenid" resultType="com.gdpu.VO.WorkerShowRepairListVo">
        select
            id,type,applicant_name,mobile,address,description,
            repair_Date,finish_Time
        from `repair`
        where worker_id=#{openid} and type='emergency' and finish_Time is NULL
    </select>

    <select id="selectRepairById" resultType="com.gdpu.VO.ShowRepairListVo">
        SELECT
            id,
            type,
            applicant_name,
            mobile,
            address,
            description,
            repair_Date,
            wxuser.`name` as workerName,
            finish_Time
        FROM
            `repair` , `wxuser`
        WHERE
            `repair`.id=#{id} and `repair`.worker_id=wxUser_openid
    </select>

    <select id="workerNoFinish" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM
            `repair`
        WHERE
            worker_id = #{openid}
          AND finish_Time IS NULL
    </select>

    <select id="studentNoFinish" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM
            `repair`
        WHERE
            student_id = #{openid}
          AND finish_Time IS NULL
    </select>

    <select id="selectAllNoFinishList" resultType="com.gdpu.VO.ShowRepairListVo">
        SELECT
            id,
            type,
            applicant_name,
            mobile,
            address,
            description,
            repair_Date,
            wxuser.`name` as workerName,
            finish_Time
        FROM
            `repair` , `wxuser`
        WHERE
            `repair`.worker_id=wxUser_openid AND finish_Time IS NULL
    </select>

    <select id="findRepairById" resultType="com.gdpu.pojo.Repair">
        select * from repair where id = #{id};
    </select>

    <select id="findNormalPendingRepairs" resultType="com.gdpu.pojo.Repair">
        SELECT * FROM repair WHERE type = 'normal' AND finish_time IS NULL ORDER BY id
    </select>

    <select id="findEmergencyPendingRepairs" resultType="com.gdpu.pojo.Repair">
        SELECT * FROM repair WHERE type = 'emergency' AND finish_time IS NULL ORDER BY id
    </select>


</mapper>
